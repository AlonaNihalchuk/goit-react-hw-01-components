{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/Statistics.js","components/demo.jpg","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","Statistics","title","map","statsItem","label","percentage","id","FriendListItem","demoImg","isOnline","width","FriendList","friends","friend","TransactionHistory","transactions","transaction","type","amount","currency","propType","PropTypes","arrayOf","shape","string","isRequired","App","userData","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA2CeA,MAxCf,YAA4E,IAAzDC,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,IAAkD,IAA7CC,gBAA6C,MAFnD,gBAEmD,EAAjBC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAChE,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKP,EAAMK,UAAU,WACvC,mBAAGA,UAAU,OAAb,SAAqBL,IACrB,oBAAGK,UAAU,MAAb,cAAqBJ,KACrB,mBAAGI,UAAU,WAAb,SAAyBH,OAG3B,qBAAIG,UAAU,QAAd,UACE,+BACE,sBAAMA,UAAU,QAAhB,uBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMI,eAEpC,+BACE,sBAAMH,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMK,WAEpC,+BACE,sBAAMJ,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMM,kB,OCM7BC,MA5Bf,YAAuC,IAAjBC,EAAgB,EAAhBA,MAAOR,EAAS,EAATA,MAC3B,OACE,0BAASC,UAAU,aAAnB,UACGO,GAAS,oBAAIP,UAAU,QAAd,SAAuBO,IAEjC,oBAAIP,UAAU,YAAd,SACGD,EAAMS,KAAI,SAAAC,GAAS,OAClB,qBAAIT,UAAU,OAAd,UACE,sBAAMA,UAAU,QAAhB,SAAyBS,EAAUC,QACnC,uBAAMV,UAAU,aAAhB,UAA8BS,EAAUE,WAAxC,UAFwBF,EAAUG,aCT/B,MAA0B,iCCmB1BC,MAhBf,YAA+D,IAAD,IAApCf,cAAoC,MAA3BgB,EAA2B,EAAlBnB,EAAkB,EAAlBA,KAAMoB,EAAY,EAAZA,SAChD,OACE,qBAAIf,UAAU,OAAd,UACE,sBAAMA,UAAU,SAAhB,SAA0Be,IAC1B,qBAAKf,UAAU,SAASC,IAAKH,EAAQI,IAAKP,EAAMqB,MAAM,OACtD,mBAAGhB,UAAU,OAAb,SAAqBL,QCgBZsB,MArBf,YAAkC,IAAZC,EAAW,EAAXA,QACpB,OACE,oBAAIlB,UAAU,cAAd,SACGkB,EAAQV,KAAI,SAAAW,GAAM,OACjB,cAAC,EAAD,CAEErB,OAAQqB,EAAOrB,OACfH,KAAMwB,EAAOxB,KACboB,SAAUI,EAAOJ,UAHZI,EAAOP,U,uBCNtB,SAASQ,EAAT,GAA+C,IAAjBC,EAAgB,EAAhBA,aAC5B,OACE,wBAAOrB,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGqB,EAAab,KAAI,SAAAc,GAAW,OAC3B,+BACE,6BAAKA,EAAYC,OACjB,6BAAKD,EAAYE,SACjB,6BAAKF,EAAYG,aAHVH,EAAYV,YAW/BQ,EAAmBM,SAAW,CAC5BL,aAAcM,IAAUC,QACtBD,IAAUE,MAAM,CACdjB,GAAIe,IAAUG,OAAOC,WACrBR,KAAMI,IAAUG,OAAOC,WACvBP,OAAQG,IAAUG,OAAOC,WACzBN,SAAUE,IAAUG,OAAOC,aAC1BA,aAIQX,Q,OCyCAY,MApBf,WACE,OACE,gCACE,cAAC,EAAD,CACErC,KAAMsC,EAAStC,KACfC,IAAKqC,EAASrC,IACdC,SAAUoC,EAASpC,SACnBC,OAAQmC,EAASnC,OACjBC,MAAOkC,EAASlC,QAKlB,cAAC,EAAD,CAAYQ,MAAM,eAAeR,MAAOmC,IACxC,cAAC,EAAD,CAAYhB,QAASA,IACrB,cAAC,EAAD,CAAoBG,aAAcA,QCZxCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.65e1ea2d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nconst defaultLocation = 'it is unknown';\n\nfunction Profile({ name, tag, location = defaultLocation, avatar, stats }) {\n  return (\n    <div className=\"profile\">\n      <div className=\"description\">\n        <img src={avatar} alt={name} className=\"avatar\" />\n        <p className=\"name\">{name}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n\n      <ul className=\"stats\">\n        <li>\n          <span className=\"label\">Followers</span>\n          <span className=\"quantity\">{stats.followers}</span>\n        </li>\n        <li>\n          <span className=\"label\">Views</span>\n          <span className=\"quantity\">{stats.views}</span>\n        </li>\n        <li>\n          <span className=\"label\">Likes</span>\n          <span className=\"quantity\">{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className=\"statistics\">\n      {title && <h2 className=\"title\">{title}</h2>}\n\n      <ul className=\"stat-list\">\n        {stats.map(statsItem => (\n          <li className=\"item\" key={statsItem.id}>\n            <span className=\"label\">{statsItem.label}</span>\n            <span className=\"percentage\">{statsItem.percentage} %</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","export default __webpack_public_path__ + \"static/media/demo.395b9e72.jpg\";","import PropTypes from 'prop-types';\nimport demoImg from '../demo.jpg';\n\nfunction FriendListItem({ avatar = demoImg, name, isOnline }) {\n  return (\n    <li className=\"item\">\n      <span className=\"status\">{isOnline}</span>\n      <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\n      <p className=\"name\">{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className=\"friend-list\">\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\n\nfunction TransactionHistory({ transactions }) {\n  return (\n    <table className=\"transaction-history\">\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {transactions.map(transaction => (\n          <tr key={transaction.id}>\n            <td>{transaction.type}</td>\n            <td>{transaction.amount}</td>\n            <td>{transaction.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propType = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default TransactionHistory;\n","// // import logo from './logo.svg';\n// // import React from 'react';\n// // import ReactDom from 'react-dom';\n\n// import './App.css';\n\n// import PaintingList from './components/PaintingList';\n// import paintings from './paintings.json';\n// import Section from './components/Section';\n\n// export default function App() {\n//   return (\n//     <div>\n//       <Section title=\"top week\">\n//         <PaintingList items={paintings} />\n//       </Section>\n//       <Section title=\"top month\" />\n//     </div>\n//   );\n// }\n\n// // comment\n// // function App() {\n// //   return (\n// //     <div className=\"App\">\n// //       <header className=\"App-header\">\n// //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n// //         <p>\n// //           Edit <code>src/App.js</code> and save to reload.\n// //         </p>\n// //         <a\n// //           className=\"App-link\"\n// //           href=\"https://reactjs.org\"\n// //           target=\"_blank\"\n// //           rel=\"noopener noreferrer\"\n// //         >\n// //           Learn React!\n// //         </a>\n// //       </header>\n// //     </div>\n// //   );\n// // }\n\nimport userData from './components/Profile/user.json';\nimport Profile from './components/Profile/Profile';\n\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport Statistics from './components/Statistics/Statistics';\n\n// import StatisticalSection from './components/Statistics/StatisticalSection';\n// import StatisticsList from './components/Statistics/StatisticsList';\n\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './components/FriendList/friends.json';\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './components/TransactionHistory/transactions.json';\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        name={userData.name}\n        tag={userData.tag}\n        location={userData.location}\n        avatar={userData.avatar}\n        stats={userData.stats}\n      />\n      {/* <StatisticalSection title=\"Upload stats\">\n        <StatisticsList stats={statisticalData} />\n      </StatisticalSection> */}\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory transactions={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\n// video repeta 1\n// const element1 = React.createElement('span', { children: 'hello' });\n// const element2 = React.createElement('span', { children: 'world' });\n\n// const element = React.createElement('div', {\n//   a: 10,\n//   b: 20,\n//   // детьми могут быть другие реакт элементы\n//   children: [element1, ' ', element2],\n// });\n// console.log(element);\n// ReactDOM.render(element, document.querySelector('#root'));\n\n// video repeta 2\n\n// const elem1 = <span>hello</span>;\n// const elem2 = <span>world</span>;\n// const elem = (\n//   <div>\n//     {elem1} {elem2}\n//   </div>\n// );\n// console.log(elem);\n// ReactDOM.render(elem, document.querySelector('#root'));\n\n// repeta 3\n\n// const data = paintings[1];\n\n// const data = {\n//   id: 'id-1',\n//   url: 'https://cdn.pixabay.com/photo/2017/07/31/22/05/feathers-2561511_1280.jpg',\n//   title: 'Feathers. Art abstract',\n//   price: 500,\n//   author: {\n//     tag: 'ractapopulous',\n//     url: 'https://pixabay.com/users/ractapopulous-24766/',\n//   },\n//   quantity: 10,\n// };\n\n// const painting1 = (\n//   <div>\n//     <img src={data.url} alt={data.title} width=\"480\" />\n//     <h2>{data.title}</h2>\n//     <p>\n//       Автор: <a href={data.author.url}>{data.author.tag}</a>\n//     </p>\n//     <p>Цена: {data.price} кредитов</p>\n//     <p>Доступность: {data.quantity}</p>\n//     <button type=\"button\">Добавить в корзину</button>\n//   </div>\n// );\n// const painting = paintings[2];\n\n// here\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}